package org.example.config;

import org.example.config.BotConfig;
import org.example.service.ClaudeService;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class MyBot extends TelegramLongPollingBot {

    @Override
    public String getBotUsername() {
        return BotConfig.BOT_NAME;
    }

    @Override
    public String getBotToken() {
        return BotConfig.BOT_TOKEN;
    }

    private final Map<Long, Boolean> chatMode = new HashMap<>();
    private final ClaudeService claudeService = new ClaudeService();

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            String messageText = update.getMessage().getText();
            long chatId = update.getMessage().getChatId();

            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ —á–∞—Ç–∞ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –ò–ò
            if (chatMode.getOrDefault(chatId, false) && !messageText.startsWith("/")) {
                try {
                    String response = claudeService.generateContent(
                            "–°–∏–∑ –º“Ø–º–∫“Ø–Ω—á“Ø–ª“Ø–≥“Ø —á–µ–∫—Ç–µ–ª–≥–µ–Ω –∞–¥–∞–º–¥–∞—Ä–¥—ã–Ω –∂–∞—Ä–¥–∞–º—á—ã—Å—ã—Å—ã–∑. –ñ”©–Ω”©–∫”©–π, —Ç–∞–∫ –∂–∞–Ω–∞ –∫—ã–ª–¥–∞—Ç—Ç—ã–∫ –º–µ–Ω–µ–Ω –∂–æ–æ–ø –±–µ—Ä.", messageText);
                    sendTextMessage(chatId, response);
                } catch (IOException e) {
                    sendTextMessage(chatId, "–ò–ò –º–µ–Ω–µ–Ω –±–∞–π–ª–∞–Ω—ã—à—Ç–∞ –∫–∞—Ç–∞ –∫–µ—Ç—Ç–∏.");
                    e.printStackTrace();
                }
                return;
            }

            // –ö–æ–º–∞–Ω–¥—ã
            switch (messageText) {
                case "/start":
                    sendTextMessage(chatId,
                            "–°–∞–ª–∞–º! üëã\n\n" +
                                    "–ë—É–ª –±–æ—Ç ‚Äî –±–∏–∑–¥–∏–Ω —Å–∞–Ω–∞—Ä–∏–ø—Ç–∏–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–±—ã–∑–¥—ã–Ω –∂–∞—Ä–¥–∞–º—á—ã—Å—ã.\n" +
                                    "–ñ–∞“£—ã–ª—ã–∫—Ç–∞—Ä–¥—ã –æ–∫—É–π –∞–ª–∞—Å—ã“£, –ø–∞–π–¥–∞–ª—É—É –º–∞–∞–ª—ã–º–∞—Ç –∞–ª–∞—Å—ã“£ –∂–∞–Ω–∞ –ò–ò –º–µ–Ω–µ–Ω —Å“Ø–π–ª”©—à”© –∞–ª–∞—Å—ã“£.\n\n" +
                                    "–ö”©–±“Ø—Ä”©”©–∫ –º–∞–∞–ª—ã–º–∞—Ç “Ø—á“Ø–Ω /help –¥–µ–ø –∂–∞–∑—ã“£—ã–∑.");
                    chatMode.put(chatId, false);
                    break;

                case "/help":
                    sendTextMessage(chatId,
                            "ü§ñ –ë—É–π—Ä—É–∫—Ç–∞—Ä–¥—ã–Ω —Ç–∏–∑–º–µ—Å–∏:\n\n" +
                                    "/start ‚Äì –ë–æ—Ç —Ç—É—É—Ä–∞–ª—É—É –º–∞–∞–ª—ã–º–∞—Ç\n" +
                                    "/help ‚Äì –ö–æ–ª–¥–æ–Ω—É—É –±–æ—é–Ω—á–∞ –∂–∞—Ä–¥–∞–º\n" +
                                    "/chat ‚Äì  –ñ–∞—Å–∞–ª–º–∞ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç –º–µ–Ω–µ–Ω –±–∞–∞—Ä–ª–∞—à—É—É–Ω—É –±–∞—à—Ç–æ–æ");
                    chatMode.put(chatId, false);
                    break;

                case "/chat":
                    sendTextMessage(chatId,
                            "üß† –°–∏–∑ –ñ–∞—Å–∞–ª–º–∞ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç –º–µ–Ω–µ–Ω –±–∞–∞—Ä–ª–∞—à—É—É–Ω—É –±–∞—à—Ç–∞–¥—ã“£—ã–∑.\n–°—É—Ä–∞–Ω—ã—á—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑:");
                    chatMode.put(chatId, true);
                    break;

                default:
                    sendTextMessage(chatId,
                            "–¢“Ø—à“Ø–Ω“Ø–∫—Å“Ø–∑ –±—É–π—Ä—É–∫. /help –¥–µ–ø –∂–∞–∑—ã“£—ã–∑ –∂–∞—Ä–¥–∞–º –∞–ª—É—É “Ø—á“Ø–Ω.");
                    chatMode.put(chatId, false);
                    break;
            }
        }
    }

    private void sendTextMessage(long chatId, String response) {
        SendMessage message = new SendMessage();
        message.setChatId(String.valueOf(chatId));
        message.setText(response);
        message.setParseMode("Markdown"); // –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "HTML"

        try {
            execute(message); // –ú–µ—Ç–æ–¥ –∏–∑ TelegramLongPollingBot
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }



}
